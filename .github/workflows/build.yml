name: Build QuoteWidget APK
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (repo may be empty)
        uses: actions/checkout@v4

      - name: Generate Android project files
        run: |
          set -e

          mkdir -p app/src/main/java/com/example/quotewidget
          mkdir -p app/src/main/res/layout
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/res/xml
          mkdir -p app/src/main/res/drawable
          mkdir -p app/src/main/res/mipmap-anydpi-v26

          cat > settings.gradle <<'EOF'
          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }

          dependencyResolutionManagement {
              repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
              repositories {
                  google()
                  mavenCentral()
              }
          }

          rootProject.name = "QuoteWidget"
          include(":app")
          EOF

          cat > build.gradle.kts <<'EOF'
          plugins {
              id("com.android.application") version "8.6.0" apply false
              id("org.jetbrains.kotlin.android") version "2.0.20" apply false
          }
          EOF

          cat > app/build.gradle.kts <<'EOF'
          plugins {
              id("com.android.application")
              id("org.jetbrains.kotlin.android")
          }

          android {
              namespace = "com.example.quotewidget"
              compileSdk = 35

              defaultConfig {
                  applicationId = "com.example.quotewidget"
                  minSdk = 24
                  targetSdk = 35
                  versionCode = 1
                  versionName = "1.0"
                  vectorDrawables.useSupportLibrary = true
              }

              buildTypes {
                  release {
                      isMinifyEnabled = true
                      proguardFiles(
                          getDefaultProguardFile("proguard-android-optimize.txt"),
                          "proguard-rules.pro"
                      )
                  }
                  debug { isMinifyEnabled = false }
              }

              compileOptions {
                  sourceCompatibility = JavaVersion.VERSION_17
                  targetCompatibility = JavaVersion.VERSION_17
              }
              kotlinOptions { jvmTarget = "17" }
              buildFeatures { viewBinding = true }
          }

          dependencies {
              implementation("androidx.core:core-ktx:1.13.1")
              implementation("androidx.appcompat:appcompat:1.7.0")
              implementation("com.google.android.material:material:1.12.0")
              implementation("androidx.activity:activity-ktx:1.9.3")
              implementation("androidx.constraintlayout:constraintlayout:2.2.0")
          }
          EOF

          : > app/proguard-rules.pro

          cat > app/src/main/AndroidManifest.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">

              <application
                  android:allowBackup="true"
                  android:label="QuoteWidget"
                  android:icon="@mipmap/ic_launcher"
                  android:roundIcon="@mipmap/ic_launcher_round"
                  android:supportsRtl="true"
                  android:theme="@style/Theme.QuoteWidget">

                  <activity
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>

                  <receiver
                      android:name=".QuoteWidgetProvider"
                      android:exported="false"
                      android:label="Quote Widget">
                      <intent-filter>
                          <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                      </intent-filter>
                      <meta-data
                          android:name="android.appwidget.provider"
                          android:resource="@xml/quote_appwidget_info" />
                  </receiver>

              </application>
          </manifest>
          EOF

          cat > app/src/main/java/com/example/quotewidget/Prefs.kt <<'EOF'
          package com.example.quotewidget

          import android.content.Context
          import android.content.SharedPreferences

          private const val PREF_NAME = "quote_prefs"
          private const val KEY_TEXT = "widget_text"

          object Prefs {
              private fun prefs(ctx: Context): SharedPreferences =
        cat > app/src/main/AndroidManifest.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
              <application
                  android:allowBackup="true"
                  android:label="QuoteWidget"
                  android:icon="@mipmap/ic_launcher"
                  android:roundIcon="@mipmap/ic_launcher_round"
                  android:supportsRtl="true"
                  android:theme="@style/Theme.QuoteWidget">
                  <activity
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
                  <receiver
                      android:name=".QuoteWidgetProvider"
                      android:exported="false"
                      android:label="Quote Widget">
                      <intent-filter>
                          <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                      </intent-filter>
                      <meta-data
                          android:name="android.appwidget.provider"
                          android:resource="@xml/quote_appwidget_info" />
                  </receiver>
              </application>
          </manifest>
          EOF

          cat > app/src/main/java/com/example/quotewidget/Prefs.kt <<'EOF'
          package com.example.quotewidget
          import android.content.Context
          import android.content.SharedPreferences
          private const val PREF_NAME = "quote_prefs"
          private const val KEY_TEXT = "widget_text"
          object Prefs {
              private fun prefs(ctx: Context): SharedPreferences =
                  ctx.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE)
              fun saveText(ctx: Context, text: String) {
                  prefs(ctx).edit().putString(KEY_TEXT, text).apply()
              }
              fun getText(ctx: Context): String =
                  prefs(ctx).getString(KEY_TEXT, "点击编辑设置句子") ?: "点击编辑设置句子"
          }
          EOF

          cat > app/src/main/java/com/example/quotewidget/MainActivity.kt <<'EOF'
          package com.example.quotewidget
          import android.appwidget.AppWidgetManager
          import android.content.ComponentName
          import android.os.Bundle
          import androidx.activity.enableEdgeToEdge
          import androidx.appcompat.app.AppCompatActivity
          import com.example.quotewidget.databinding.ActivityMainBinding
          class MainActivity : AppCompatActivity() {
              private lateinit var binding: ActivityMainBinding
              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  enableEdgeToEdge()
                  binding = ActivityMainBinding.inflate(layoutInflater)
                  setContentView(binding.root)
                  binding.editText.setText(Prefs.getText(this))
                  binding.btnSave.setOnClickListener {
                      val text = binding.editText.text?.toString()?.trim().orEmpty()
                      Prefs.saveText(this, text.ifEmpty { "" })
                      updateAllWidgets()
                      binding.inputLayout.error = null
                      binding.inputLayout.helperText = "已保存，回到桌面刷新小组件查看"
                  }
              }
              private fun updateAllWidgets() {
                  val manager = AppWidgetManager.getInstance(this)
                  val component = ComponentName(this, QuoteWidgetProvider::class.java)
                  val ids = manager.getAppWidgetIds(component)
                  QuoteWidgetProvider.updateAppWidgets(this, manager, ids)
              }
          }
          EOF    
cat > app/src/main/java/com/example/quotewidget/QuoteWidgetProvider.kt <<'EOF'
          package com.example.quotewidget
          import android.app.PendingIntent
          import android.appwidget.AppWidgetManager
          import android.appwidget.AppWidgetProvider
          import android.content.Context
          import android.content.Intent
          import android.widget.RemoteViews
          class QuoteWidgetProvider : AppWidgetProvider() {
              override fun onUpdate(
                  context: Context,
                  appWidgetManager: AppWidgetManager,
                  appWidgetIds: IntArray
              ) {
                  updateAppWidgets(context, appWidgetManager, appWidgetIds)
              }
              companion object {
                  fun updateAppWidgets(
                      context: Context,
                      appWidgetManager: AppWidgetManager,
                      appWidgetIds: IntArray
                  ) {
                      for (appWidgetId in appWidgetIds) {
                          val views = RemoteViews(context.packageName, R.layout.widget_quote)
                          val text = Prefs.getText(context)
                          views.setTextViewText(R.id.tvQuote, text)
                          val intent = Intent(context, MainActivity::class.java)
                          val pending = PendingIntent.getActivity(
                              context, 0, intent,
                              PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE
                          )
                          views.setOnClickPendingIntent(R.id.widgetRoot, pending)
                          appWidgetManager.updateAppWidget(appWidgetId, views)
                      }
                  }
              }
          }
          EOF

          cat > app/src/main/res/layout/activity_main.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:app="http://schemas.android.com/apk/res-auto"
              android:orientation="vertical"
              android:padding="24dp"
              android:fitsSystemWindows="true"
              android:layout_width="match_parent"
              android:layout_height="match_parent">
              <com.google.android.material.textfield.TextInputLayout
                  android:id="@+id/inputLayout"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
                  android:hint="输入想显示的一句话"
                  app:helperText="保存后回到桌面添加/刷新小组件">
                  <com.google.android.material.textfield.TextInputEditText
                      android:id="@+id/editText"
                      android:layout_width="match_parent"
                      android:layout_height="wrap_content"
                      android:maxLines="3"
                      android:inputType="textMultiLine"
                      android:imeOptions="actionDone"/>
              </com.google.android.material.textfield.TextInputLayout>
              <Button
                  android:id="@+id/btnSave"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
                  android:text="保存到小组件"
                  android:layout_marginTop="16dp"/>
          </LinearLayout>
          EOF

          cat > app/src/main/res/layout/widget_quote.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:id="@+id/widgetRoot"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:background="@drawable/widget_bg"
              android:padding="12dp"
              android:orientation="vertical">
              <TextView
                  android:id="@+id/tvQuote"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
                  android:text="点击编辑设置句子"
                  android:textSize="16sp"
                  android:lineSpacingExtra="2dp"
                  android:maxLines="6"
                  android:ellipsize="end"/>
          </LinearLayout>
          EOF

          cat > app/src/main/res/xml/quote_appwidget_info.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <AppWidgetProviderInfo xmlns:android="http://schemas.android.com/apk/res/android"
              android:minWidth="110dp"
              android:minHeight="110dp"
              android:updatePeriodMillis="0"
              android:initialLayout="@layout/widget_quote"
              android:resizeMode="horizontal|vertical"
              android:widgetCategory="home_screen"/>
          EOF

          cat > app/src/main/res/values/strings.xml <<'EOF'
          <resources>
              <string name="app_name">QuoteWidget</string>
          </resour
